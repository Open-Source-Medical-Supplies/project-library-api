

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE OR REPLACE FUNCTION "public"."generate_slug"("name" "text") RETURNS "text"
    LANGUAGE "plpgsql" IMMUTABLE
    AS $$
BEGIN
  RETURN lower(regexp_replace(trim(name), '[^a-zA-Z0-9]+', '-', 'g'));
END;
$$;


ALTER FUNCTION "public"."generate_slug"("name" "text") OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."Categories" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "problem_statement" "text",
    "slug" "text",
    "engineering_requirements" "text",
    "order" "text",
    "primary_image" "text",
    "primary_image_alt" "text",
    "resources" "text",
    "token" character varying,
    "additional_requirements" "text",
    "combined_text" "tsvector" GENERATED ALWAYS AS ("to_tsvector"('"english"'::"regconfig", ((COALESCE("name", ''''::"text") || ' '::"text") || COALESCE("problem_statement", ''''::"text")))) STORED
);


ALTER TABLE "public"."Categories" OWNER TO "postgres";


ALTER TABLE "public"."Categories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Categories_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Filters" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "token" character varying,
    "slug" "text",
    "type" character varying,
    "label" "text"
);


ALTER TABLE "public"."Filters" OWNER TO "postgres";


ALTER TABLE "public"."Filters" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Filters_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."ProjectTags" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "project_token" character varying,
    "category_token" character varying,
    "associated_table" "text",
    "associated_token" "text",
    "skill_token" character varying,
    "skills_token" character varying,
    "tools_token" character varying
);


ALTER TABLE "public"."ProjectTags" OWNER TO "postgres";


ALTER TABLE "public"."ProjectTags" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ProjectTags_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Projects" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "slug" "text",
    "added_on" "text",
    "attribution_organization" "text",
    "category_tag" "text",
    "creator" "text",
    "description" "text",
    "license" "text",
    "link_data" "text",
    "link_text" "text",
    "numerical_id" "text",
    "osms_notes" "text",
    "primary_image" "text",
    "primary_image_alt" "text",
    "reviewed_by" "text",
    "source_type" "text",
    "token" character varying,
    "combined_text" "tsvector" GENERATED ALWAYS AS ("to_tsvector"('"english"'::"regconfig", ((COALESCE("name", ''''::"text") || ' '::"text") || COALESCE("description", ''''::"text")))) STORED
);


ALTER TABLE "public"."Projects" OWNER TO "postgres";


ALTER TABLE "public"."Projects" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Projects_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Skills" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "token" character varying DEFAULT "encode"("extensions"."gen_random_bytes"(32), 'base64'::"text") NOT NULL,
    "slug" character varying
);


ALTER TABLE "public"."Skills" OWNER TO "postgres";


ALTER TABLE "public"."Skills" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Skills_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Tools" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "token" character varying DEFAULT "encode"("extensions"."gen_random_bytes"(32), 'base64'::"text") NOT NULL,
    "slug" character varying
);


ALTER TABLE "public"."Tools" OWNER TO "postgres";


ALTER TABLE "public"."Tools" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Tools_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."Categories"
    ADD CONSTRAINT "Categories_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."Categories"
    ADD CONSTRAINT "Categories_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Categories"
    ADD CONSTRAINT "Categories_slug_key" UNIQUE ("slug");



ALTER TABLE ONLY "public"."Categories"
    ADD CONSTRAINT "Categories_token_key" UNIQUE ("token");



ALTER TABLE ONLY "public"."Filters"
    ADD CONSTRAINT "FilterItems_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ProjectTags"
    ADD CONSTRAINT "ProjectTags_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Projects"
    ADD CONSTRAINT "Projects_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Projects"
    ADD CONSTRAINT "Projects_token_key" UNIQUE ("token");



ALTER TABLE ONLY "public"."Skills"
    ADD CONSTRAINT "Skills_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Skills"
    ADD CONSTRAINT "Skills_token_key" UNIQUE ("token");



ALTER TABLE ONLY "public"."Tools"
    ADD CONSTRAINT "Tools_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Tools"
    ADD CONSTRAINT "Tools_token_key" UNIQUE ("token");



CREATE INDEX "idx_categories_combined_text" ON "public"."Categories" USING "gin" ("combined_text");



CREATE INDEX "idx_combined_text" ON "public"."Projects" USING "gin" ("combined_text");



ALTER TABLE ONLY "public"."ProjectTags"
    ADD CONSTRAINT "ProjectTags_category_token_fkey" FOREIGN KEY ("category_token") REFERENCES "public"."Categories"("token");



ALTER TABLE ONLY "public"."ProjectTags"
    ADD CONSTRAINT "ProjectTags_project_token_fkey" FOREIGN KEY ("project_token") REFERENCES "public"."Projects"("token");



ALTER TABLE ONLY "public"."ProjectTags"
    ADD CONSTRAINT "ProjectTags_tools_token_fkey" FOREIGN KEY ("tools_token") REFERENCES "public"."Tools"("token");



ALTER TABLE "public"."Categories" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "Enable read access for all users" ON "public"."Categories" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."ProjectTags" FOR SELECT TO "anon", "service_role" USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."Projects" FOR SELECT USING (true);



ALTER TABLE "public"."Filters" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ProjectTags" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."Projects" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";





GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";


























































































































































































GRANT ALL ON FUNCTION "public"."generate_slug"("name" "text") TO "anon";
GRANT ALL ON FUNCTION "public"."generate_slug"("name" "text") TO "authenticated";
GRANT ALL ON FUNCTION "public"."generate_slug"("name" "text") TO "service_role";


















GRANT ALL ON TABLE "public"."Categories" TO "anon";
GRANT ALL ON TABLE "public"."Categories" TO "authenticated";
GRANT ALL ON TABLE "public"."Categories" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Categories_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Categories_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Categories_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Filters" TO "anon";
GRANT ALL ON TABLE "public"."Filters" TO "authenticated";
GRANT ALL ON TABLE "public"."Filters" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Filters_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Filters_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Filters_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ProjectTags" TO "anon";
GRANT ALL ON TABLE "public"."ProjectTags" TO "authenticated";
GRANT ALL ON TABLE "public"."ProjectTags" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ProjectTags_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ProjectTags_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ProjectTags_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Projects" TO "anon";
GRANT ALL ON TABLE "public"."Projects" TO "authenticated";
GRANT ALL ON TABLE "public"."Projects" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Projects_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Projects_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Projects_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Skills" TO "anon";
GRANT ALL ON TABLE "public"."Skills" TO "authenticated";
GRANT ALL ON TABLE "public"."Skills" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Skills_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Skills_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Skills_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Tools" TO "anon";
GRANT ALL ON TABLE "public"."Tools" TO "authenticated";
GRANT ALL ON TABLE "public"."Tools" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Tools_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Tools_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Tools_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;

--
-- Dumped schema changes for auth and storage
--

GRANT ALL ON TABLE "storage"."s3_multipart_uploads" TO "postgres";
GRANT ALL ON TABLE "storage"."s3_multipart_uploads_parts" TO "postgres";
